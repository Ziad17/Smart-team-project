CREATE DATABASE EXAM_SYSTEM;


Faculty Table---------------------------------------------------------------------------------------------
CREATE TABLE Faculty(id INT PRIMARY KEY AUTO_INCREMENT,name TEXT);


Level Table---------------------------------------------------------------------------------------------
CREATE TABLE Level(id INT PRIMARY KEY AUTO_INCREMENT,
                    name TEXT,
                  faculty_id INT,
                  FOREIGN KEY(faculty_id) REFERENCES Faculty(id));

Department Table---------------------------------------------------------------------------------------------
CREATE TABLE Department(id INT PRIMARY KEY AUTO_INCREMENT,
                    name TEXT,
                  faculty_id INT,
                  FOREIGN KEY(faculty_id) REFERENCES Faculty(id));

Prof_Request---------------------------------------------------------------------------------------------
CREATE TABLE Prof_request(id INT PRIMARY KEY AUTO_INCREMENT,
                   name TEXT,
                   phone TEXT,
                  degree TEXT,
                  email TEXT UNIQUE,
                  acadmic_id TEXT UNIQUE,
                  user_password TEXT,
                  accept_stat boolean,
                  request_date DATE,
                  department_id INT,
                  FOREIGN KEY(department_id) REFERENCES Department(id));
Approved_prof Table---------------------------------------------------------------------------------------------
CREATE TABLE Approved_prof(id INT PRIMARY KEY AUTO_INCREMENT,
                          prof_request_id INT,
                          FOREIGN KEY(prof_request_id) REFERENCES Prof_request(id));

Admin Table---------------------------------------------------------------------------------------------
CREATE TABLE Admin(id INT PRIMARY KEY AUTO_INCREMENT,
                          approved_prof_id INT,
                          FOREIGN KEY(approved_prof_id) REFERENCES Approved_prof(id));

Subject Table---------------------------------------------------------------------------------------------
CREATE TABLE Subject(id INT PRIMARY KEY AUTO_INCREMENT,
                    name TEXT,
                    subject_code TEXT,
                    chapter_num INT,
                    department_id INT,
                    level_id INT,
                    approved_prof_id INT,
                    FOREIGN KEY(department_id) REFERENCES department(id),
                    FOREIGN KEY(level_id) REFERENCES level(id),
                    FOREIGN KEY(approved_prof_id) REFERENCES approved_prof(id));

Question Table---------------------------------------------------------------------------------------------
CREATE TABLE Question(id INT PRIMARY KEY AUTO_INCREMENT,
                    content TEXT,
                    chapter TEXT,
                    type TEXT,
                    difficulty TEXT,
                    subject_id INT,
                    FOREIGN KEY(subject_id) REFERENCES Subject(id));

Exam Table---------------------------------------------------------------------------------------------
CREATE TABLE Exam(id INT PRIMARY KEY AUTO_INCREMENT,
                    degree INT,
                    start_date DATETIME,
                    creation_date DATETIME,
                    duration_in_minutes INT,
                    subject_id INT,
                    FOREIGN KEY(subject_id) REFERENCES Subject(id));
Exam_details Table---------------------------------------------------------------------------------------------
CREATE TABLE Exam_details(id INT PRIMARY KEY AUTO_INCREMENT,
                    chapter INT,
                    type TEXT,
                    difficulty TEXT,
                    number_of_questions INT,
                    exam_id INT,
                    FOREIGN KEY(exam_id) REFERENCES Exam(id));
Student Table---------------------------------------------------------------------------------------------
CREATE TABLE Student(id INT PRIMARY KEY AUTO_INCREMENT,
                   name TEXT,
                   phone TEXT,
                  email TEXT UNIQUE,
                  acadmic_id TEXT UNIQUE,
                  user_password TEXT,
                  request_date DATE,
                  department_id INT,
                     level_id INT,
                  FOREIGN KEY(department_id) REFERENCES Department(id),
                    FOREIGN KEY(level_id) REFERENCES Level(id));

Result Table---------------------------------------------------------------------------------------------
CREATE TABLE Result(result INT,
		    student_id INT,
                     exam_id INT,
                    FOREIGN KEY(student_id) REFERENCES Student(id),
                    FOREIGN KEY(exam_id) REFERENCES Exam(id));


Student_request Table--------------------------------------------------------------------------------------------
CREATE TABLE Student_request(id INT PRIMARY KEY AUTO_INCREMENT,
   		  student_id INT,
                  FOREIGN KEY(student_id) REFERENCES Student(id));

Subject_request Table---------------------------------------------------------------------------------------------
CREATE TABLE Subject_request(approved_stat boolean,
   		  subject_id INT,
                  FOREIGN KEY(subject_id) REFERENCES Subject(id),
		  student_request_id INT,
                  FOREIGN KEY(student_request_id) REFERENCES Student_request(id));

Prime_answer Table---------------------------------------------------------------------------------------------
CREATE TABLE Prime_answer(id INT PRIMARY KEY AUTO_INCREMENT,
   					 content TEXT,
                     correct boolean,
					question_id INT,
                  FOREIGN KEY(question_id) REFERENCES Question(id));

Student_answer Table---------------------------------------------------------------------------------------------
CREATE TABLE Student_answer(
                     correct boolean,
					question_id INT,
                  FOREIGN KEY(question_id) REFERENCES Question(id),
					exam_id INT,
                  FOREIGN KEY(exam_id) REFERENCES Exam(id),
					prime_answer_id INT,
                  FOREIGN KEY(prime_answer_id) REFERENCES Prime_answer(id),
					student_id INT,
                  FOREIGN KEY(student_id) REFERENCES Student(id));